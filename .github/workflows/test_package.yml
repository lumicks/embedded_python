name: test_package
on: push
jobs:
  test_package:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        embedded-py: [3.11.5, 3.12.4]
        conan:
          - version: 1
            args: lumicks/testing --build=missing
          - version: 2
            args: --user=lumicks --channel=testing --build=missing
    name: "${{ matrix.os }}, ${{ matrix.embedded-py }}, v${{ matrix.conan.version }}"
    env:
      create_pck: conan create . ${{ matrix.conan.args }} -o embedded_python-core/*:version=${{ matrix.embedded-py }}
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"
    - if: runner.os == 'macOS'
      name: Set up CC/CXX env
      run: |
        echo CC=/usr/bin/clang >> $GITHUB_ENV
        echo CXX=/usr/bin/clang++ >> $GITHUB_ENV
    - if: matrix.conan.version == '1'
      name: Install Conan v1
      run: | 
        python -m pip install conan==1.64.1
        conan profile new default --detect
    - if: matrix.conan.version == '2'
      name: Install Conan v2
      run: |
        python -m pip install conan==2.4.1
        conan profile detect
    - name: Test core
      run: conan create ./core ${{ matrix.conan.args }} -o embedded_python-core/*:version=${{ matrix.embedded-py }}
    - name: Test baseline
      run: ${{ env.create_pck }}
    - name: Test with numpy env
      run: ${{ env.create_pck }} -o test_embedded_python/*:env=numpy
    - name: Test with nbconvert env
      run: ${{ env.create_pck }} -o test_embedded_python/*:env=nbconvert
    - name: Test with pylake env
      run: ${{ env.create_pck }} -o test_embedded_python/*:env=pylake
